@model Microsoft.Teams.Apps.Celebration.Models.EventsTabViewModel
@{
    ViewBag.Title = "Events";
}

@section stylesheets {
    @Styles.Render("~/bundles/bootstrap3-css")
}

<div id="loader" style="display: none;" class="loading">
    @Html.Partial("~/Views/Shared/_Spinner.cshtml")
</div>

<div id="disablingDiv"></div>

<div id="events-tab-body" class="scrollbar-dynamic">
</div>

<div class="modal fade" id="newEventErrorStateModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <span class="modal-title bold-header">My memory bank is stuffed!</span>
                <button type="button" class="close app-icons-fill-hover" data-dismiss="modal" aria-label="Close" title="close">
                    <svg role="presentation" focusable="false" class="app-svg icons-close" viewBox="0 0 32 32">
                        <g class="icons-default-fill">
                            <path class="icons-unfilled" d="M16.707,16l4.2427-4.2427c0.1953-0.1953,0.1953-0.5117,0-0.707s-0.5117-0.1953-0.707,0L16,15.293l-4.2427-4.2427
	                            c-0.1953-0.1953-0.5117-0.1953-0.707,0s-0.1953,0.5117,0,0.707L15.293,16l-4.2427,4.2427c-0.1953,0.1953-0.1953,0.5117,0,0.707
	                            c0.0977,0.0977,0.2256,0.1465,0.3535,0.1465s0.2559-0.0488,0.3535-0.1465L16,16.707l4.2427,4.2427
	                            c0.0977,0.0977,0.2256,0.1465,0.3535,0.1465s0.2559-0.0488,0.3535-0.1465c0.1953-0.1953,0.1953-0.5117,0-0.707L16.707,16z"></path>
                            <path class="icons-filled" d="M17.4141,16l3.8892-3.8892c0.3906-0.3906,0.3906-1.0234,0-1.4141c-0.3901-0.3906-1.0239-0.3906-1.4141,0L16,14.5859
	                            l-3.8892-3.8892c-0.3901-0.3906-1.0239-0.3906-1.4141,0c-0.3906,0.3906-0.3906,1.0234,0,1.4141L14.5859,16l-3.8892,3.8892
	                            c-0.3906,0.3906-0.3906,1.0234,0,1.4141c0.1951,0.1953,0.4512,0.293,0.707,0.293s0.512-0.0977,0.707-0.293L16,17.4141l3.8892,3.8892
	                            c0.1951,0.1953,0.4512,0.293,0.707,0.293s0.512-0.0977,0.707-0.293c0.3906-0.3906,0.3906-1.0234,0-1.4141L17.4141,16z"></path>
                        </g>
                    </svg>
                </button>
            </div>
            <div class="modal-body">
                <span>I’ve reached the maximum number of events I can keep track of right now. If you want to add something new, delete an older one to make room.</span>
            </div>
            <div class="modal-footer">
                <button type="button" class="ts-btn ts-btn-primary got-it" data-dismiss="modal">Got it</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/bundles/jquery-slimscroll")
    @Scripts.Render("~/bundles/momentjs")

    <script>
        var microsoftTeams;
        microsoftTeams.initialize();

        let params = getQueryParameters();
        setTheme(params["theme"]);
        microsoftTeams.registerOnThemeChangeHandler(setTheme);

        $('#loader').show();
        $.ajax({
            url: '@Url.Action("EventsData")',
            type: 'POST',
            success: function (eventsData) {
                $('#events-tab-body').html(eventsData);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                $('#events-tab-body').text("Some error occurred");
            },
            complete: function () {
                $("#loader").hide();
            }
        });

        function submitHandler(err, result) {
            if (result) {
                $("#loader").show();
                $("#disablingDiv").show();
                if (result.Action === "Delete") {
                    deleteEvent(result.EventInfo.Id)
                } else if (result.Action === "Save") {
                    saveEvent(result.EventInfo);
                }
            }
        };

        function saveEvent(eventInfo) {
            let requestUrl = eventInfo["Id"] ? "/Tabs/UpdateEvent" : "/Tabs/SaveEvent";
            $.ajax({
                url: requestUrl,
                type: "POST",
                data: JSON.stringify(eventInfo),
                dataType: "text",
                contentType: "application/json; charset=utf-8",
                success: function (eventsData) {
                    $('#events-tab-body').html(eventsData);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                },
                complete: function () {
                    $("#loader").hide();
                    $("#disablingDiv").hide();
                },
            });
        }

        function newEventButtonClick() {
            handleAddingNewEvent();
        }

        function newEventTileClick() {
            handleAddingNewEvent();
        }

        function handleAddingNewEvent() {
            var requestUrl = "/Tabs/GetTotalEventCountOfUser";
            $.get(requestUrl, function (data) {
                var count = Number(data);
                if (count < @Model.MaxUserEventsCount) {
                    openTaskModule();
                } else {
                    $('#newEventErrorStateModal').modal('show');
                }
            });
        }

        function openTaskModule(eventId) {
            var url = window.location.origin + "/Tabs/ManageEvent?theme={theme}";
            var title = "Add event"
            if (eventId != null) {
                url = url + "&eventId=" + eventId;
                title = "Edit event";
            }

            var taskInfo = {
                title: title,
                height: "660px",
                width: "600px",
                url: url
            };

            taskInfo.url = taskInfo.url + "&clientTimeZone=" + encodeURIComponent(Intl.DateTimeFormat().resolvedOptions().timeZone);
            taskInfo.fallbackUrl = taskInfo.url;
            microsoftTeams.tasks.startTask(taskInfo, submitHandler);
        }

        function deleteEvent(eventId) {
            $("#loader").show();
            $("#disablingDiv").show();
            let requestUrl = "/Tabs/DeleteEvent?eventId=" + eventId;
            $.ajax({
                url: requestUrl,
                type: "POST",
                dataType: "text",
                contentType: "application/json; charset=utf-8",
                success: function (eventsData) {
                    $('#events-tab-body').html(eventsData);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                },
                complete: function () {
                    $("#loader").hide();
                    $("#disablingDiv").hide();
                },
            });
        }

        $(".event-tile-dropdown").click(function (e) {
            e.stopPropagation();
            $(".dropdown-menu").hide();
            $(this).find('ul').show();
        });

        $(".dropdown-menu").click(function (e) {
            e.stopPropagation();
            $(".dropdown-menu").hide();
        });

        $('.scrollbar-dynamic').slimScroll({
            height: '99%'
        });

        $(window).on("load", function () {
            microsoftTeams.getContext(function (context) {
                if (document.referrer.includes("https://teams.microsoft.com/")) {
                    var eventId = context["subEntityId"];
                    if (eventId) {
                        var requestUrl = "/Tabs/CheckIfEventExists?eventId=" + eventId;
                        $.get(requestUrl, function (data) {
                            if (data === "OK") {
                                openTaskModule(eventId);
                            }
                        });
                    }
                }
            });
        });

        $(document).click(function () {
            $(".dropdown-menu").hide();
        });
    </script>
}

